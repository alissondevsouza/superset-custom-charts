name: Release Helm Charts

on:
  push:
    branches: [ main ]
    paths: [ 'superset-custom/**' ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: v3.14.0

    - name: Add Helm repositories
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo update

    - name: Lint Helm Chart
      run: |
        helm lint superset-custom/

    - name: Get chart version
      id: chart_version
      run: |
        VERSION=$(grep '^version:' superset-custom/Chart.yaml | awk '{print $2}')
        NAME=$(grep '^name:' superset-custom/Chart.yaml | awk '{print $2}')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "name=$NAME" >> $GITHUB_OUTPUT
        echo "tag=${NAME}-${VERSION}" >> $GITHUB_OUTPUT

    - name: Package Helm Chart
      run: |
        mkdir -p .cr-release-packages
        helm package superset-custom/ -d .cr-release-packages

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG="${{ steps.chart_version.outputs.tag }}"
        
        # Check if release already exists
        if gh release view "$TAG" >/dev/null 2>&1; then
          echo "Release $TAG already exists"
        else
          # Create release
          gh release create "$TAG" \
            .cr-release-packages/*.tgz \
            --title "$TAG" \
            --notes "Release of ${{ steps.chart_version.outputs.name }} chart version ${{ steps.chart_version.outputs.version }}"
        fi

    - name: Update Helm repo index
      run: |
        git checkout gh-pages 2>/dev/null || git checkout --orphan gh-pages
        
        # Copy release packages
        cp -r .cr-release-packages/* . 2>/dev/null || true
        
        # Generate index
        helm repo index . --url https://github.com/${{ github.repository }}/releases/download/
        
        # Commit and push
        git add .
        git commit -m "Update Helm repository index" || exit 0
        git push origin gh-pages 